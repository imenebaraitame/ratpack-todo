buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.10.0-milestone-3'
        classpath 'com.h2database:h2:1.4.197'
        classpath "org.jooq:jooq-codegen:3.10.1"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "idea"

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation ratpack.dependency('hikari') // or 'io.ratpack:ratpack-hikari:1.5.4'
//    compile ratpack.dependency('handlebars') // handlebars.js template engine
//    compile ratpack.dependency('thymeleaf') // HTML template engine

    implementation(ratpack.dependency('h2')) //compile 'com.h2database:h2:1.4.197'
    implementation("org.jooq:jooq-codegen:3.10.1")
    implementation("org.jooq:jooq:3.10.1")
    implementation("org.jooq:jooq-meta:3.10.1")
    //compile 'org.slf4j:slf4j-simple:1.7.25'
    runtimeOnly("org.slf4j:slf4j-api:1.7.32")
    runtimeOnly("org.slf4j:slf4j-simple:1.7.32")
    implementation('javax.annotation:javax.annotation-api:1.3.2')
}

// This task we need to make is to add a file called Procfile for Heroku
task stage(dependsOn: installShadowDist) // old task name: installShadowApp

// Target moved to org.jooq.meta.jaxb
import org.jooq.util.jaxb.*
import org.jooq.util.*


task jooqCodegen {
    doLast {

        String init = "$projectDir/src/main/resources/init.sql"//.replaceAll('\\\\', '/')
        String i = init.replaceAll('\\\\', '/')
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                    .withDriver('org.h2.Driver')
                    .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$i'")
                )
                .withGenerator(new Generator()
                    .withDatabase(new Database()
                        .withName('org.jooq.util.h2.H2Database')
                        .withIncludes('.*')
                        .withExcludes('')
                        .withInputSchema('PUBLIC')
                    )
                    .withTarget(new Target()
                        .withPackageName('jooq')
                        .withDirectory("$projectDir/src/main/groovy")
                    )
                )
        GenerationTool.generate(configuration)

    }
}
